apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    dexOptions {
        maxProcessCount 4
        javaMaxHeapSize "2g"
    }

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16 // Jelly Bean (4.1)
        targetSdkVersion 28 // Android Pie (9)
        applicationId "com.orgzly"
        versionCode 150
        versionName "1.8.2"

        testInstrumentationRunner "com.orgzly.android.OrgzlyTestRunner"
        // testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        buildConfigField "String", "DROPBOX_APP_KEY", gradle.ext.appProperties.getProperty("dropbox.app_key", '""')
        resValue "string", "dropbox_app_key_schema", gradle.ext.appProperties.getProperty("dropbox.app_key_schema", '')

        buildConfigField "boolean", "IS_GIT_ENABLED", gradle.ext.appProperties.getProperty("git.enabled", 'false')

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental": "true"
                ]
            }
        }
    }

    dataBinding {
        enabled = true
    }

//    testOptions {
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
//    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "LOG_DEBUG", "false"
        }

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"

            buildConfigField "String", "DROPBOX_TOKEN", gradle.ext.appProperties.getProperty("dropbox.token", '""')
        }
    }

    flavorDimensions "store"

    productFlavors {
        premium {
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "true"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '""'

            dimension "store"
        }

        fdroid {
            /*
             * Disable Dropbox.
             * Properties file which contains the required API key is not included with the code.
             */
            buildConfigField "boolean", "IS_DROPBOX_ENABLED", "false"

            buildConfigField "String", "VERSION_NAME_SUFFIX", '" (fdroid)"'

            dimension "store"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'MissingQuantity'
        disable 'ImpliedQuantity'

        /*
         * Added for:
         * Invalid package reference in library; not included in Android:
         * javax.servlet.http. Referenced from com.dropbox.core.DbxStandardSessionStore.
         */
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
}

dependencies {
    implementation orgJavaLocation()

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "org.jetbrains:annotations:$jetbrains_annotations_version"

    implementation "androidx.multidex:multidex:$android_multidex_version"

    implementation "androidx.appcompat:appcompat:$android_appcompat_version"

    // UI
    implementation "androidx.cardview:cardview:$android_cardview_version"
    implementation "androidx.recyclerview:recyclerview:$android_recyclerview_version"
    implementation "androidx.viewpager:viewpager:$android_viewpager_version"
    implementation "androidx.constraintlayout:constraintlayout:$android_constraint_layout_version"
    implementation "androidx.preference:preference:$android_preference_version"
    implementation "com.google.android.material:material:$android_material_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$android_swiperefreshlayout_version"

    // Room
    implementation "androidx.room:room-runtime:$android_room_version"
    testImplementation "androidx.room:room-testing:$android_room_version"
    kapt "androidx.room:room-compiler:$android_room_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$android_lifecycle_version"

    androidTestImplementation "androidx.annotation:annotation:$android_annotation_version"

    testImplementation "junit:junit:$junit_version"

    // AndroidX Test
    androidTestImplementation "androidx.test.espresso:espresso-core:$android_test_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$android_test_espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$android_test_espresso_version"
    androidTestImplementation "androidx.test:runner:$android_test_version"
    androidTestImplementation "androidx.test:rules:$android_test_version"

    // For ANDROIDX_TEST_ORCHESTRATOR
    // androidTestUtil "androidx.test:orchestrator:$android_test_version"

    androidTestImplementation "androidx.test.uiautomator:uiautomator:$android_test_uiautomator_version"

    androidTestImplementation "de.sven-jacobs:loremipsum:$loremipsum_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.code.gson:gson:$gson_version"

    implementation "com.dropbox.core:dropbox-core-sdk:$dropbox_core_sdk_version"

    implementation "com.googlecode.juniversalchardet:juniversalchardet:$juniversalchardet_version"

    implementation "com.evernote:android-job:$evernote_android_job_version"

    implementation "joda-time:joda-time:$joda_time_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"

    implementation("com.thegrizzlylabs.sardine-android:sardine-android:$sardine_version") {
        exclude group: 'xpp3', module: 'xpp3'
    }

    implementation("org.eclipse.jgit:org.eclipse.jgit:$jgit_version") {
        // Resolves DuplicatePlatformClasses lint error
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}

repositories {
    mavenCentral()
}

/*
 * If "orgJavaDir" property is set, load org-java as a module. If property is not set,
 * use org-java from Maven repository. See settings.gradle.
 */
def orgJavaLocation() {
    if (gradle.ext.has('orgJavaDir')) {
        logger.info("app: Using org-java from ${gradle.ext.orgJavaDir}")
        return project(':org-java')
    } else {
        logger.info("app: Using com.orgzly:org-java:$org_java_version from Maven repository")
        return "com.orgzly:org-java:$org_java_version"
    }
}
